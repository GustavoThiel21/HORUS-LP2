unit UNSingle;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes,
  Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.Grids, Vcl.DBGrids,
  Datasnap.DBClient, Vcl.StdCtrls, Vcl.Mask, Vcl.DBCtrls, Vcl.ExtCtrls;

type
  TForm2 = class(TForm)
    ClientDataSet1: TClientDataSet;
    DataSource1: TDataSource;
    ClientDataSet1Codigo: TIntegerField;
    ClientDataSet1Descricao: TStringField;
    ClientDataSet1Unidade: TStringField;
    ClientDataSet1Fornecedor: TStringField;
    ClientDataSet1Data: TDateField;
    ClientDataSet1Quantidade: TFloatField;
    ClientDataSet1Unitario: TCurrencyField;
    ClientDataSet1Total: TCurrencyField;
    ClientDataSet1EstoqueQtd: TAggregateField;
    ClientDataSet1EstoqueVlr: TAggregateField;
    Panel1: TPanel;
    GroupBox1: TGroupBox;
    Label3: TLabel;
    Label4: TLabel;
    dbedtEstoqueQtd: TDBEdit;
    dbedtEstoqueVlr: TDBEdit;
    GroupBox2: TGroupBox;
    GroupBox3: TGroupBox;
    GroupBox4: TGroupBox;
    GroupBox5: TGroupBox;
    DBNavigator1: TDBNavigator;
    dbedtCodigo: TDBEdit;
    dbedtData: TDBEdit;
    dbedtDescricao: TDBEdit;
    dbedtFornecedor: TDBEdit;
    dbedtUnitario: TDBEdit;
    dbedtUnidade: TDBEdit;
    dbedtTotal: TDBEdit;
    dbedtQuantidade: TDBEdit;
    Label1: TLabel;
    Label2: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Label9: TLabel;
    Label10: TLabel;
    ComboBox1: TComboBox;
    ComboBox2: TComboBox;
    edtValor: TEdit;
    BtnExecutar: TButton;
    Label11: TLabel;
    Label12: TLabel;
    Label13: TLabel;
    Label14: TLabel;
    DBGrid1: TDBGrid;
    btn1: TButton;
    procedure ClientDataSet1CalcFields(DataSet: TDataSet);
    procedure FormCreate(Sender: TObject);
    procedure ClientDataSet1BeforePost(DataSet: TDataSet);
    procedure ComboBox2Change(Sender: TObject);
    procedure BtnExecutarClick(Sender: TObject);
    procedure btn1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form2: TForm2;
  vEncontrou: Boolean;

implementation

{$R *.dfm}

procedure TForm2.btn1Click(Sender: TObject);
begin
  ShowMessage('Para filtrar por campos string você deve colocar a palavra entre '''' ');
end;

procedure TForm2.BtnExecutarClick(Sender: TObject);
begin
  case ComboBox2.ItemIndex of
    0:
      case ComboBox1.ItemIndex of
        0:
          begin
            ClientDataSet1.IndexFieldNames := 'Codigo';
          end;

        1:
          begin
            ClientDataSet1.IndexFieldNames := 'Descricao';
          end;
        2:
          begin
            ClientDataSet1.IndexFieldNames := 'Unidade';
          end;
        3:
          begin
            ClientDataSet1.IndexFieldNames := 'Fornecedor';
          end;
        4:
          begin
            ClientDataSet1.IndexFieldNames := 'Data';
          end;
        5:
          begin
            ClientDataSet1.IndexFieldNames := 'Quantidade';
          end;
        6:
          begin
            ClientDataSet1.IndexFieldNames := 'Unitario';
          end;
        7:
          begin
            ClientDataSet1.IndexFieldNames := 'Total';
          end;
      end;
    1:
      case ComboBox1.ItemIndex of
        0:
          begin
            if ClientDataSet1.Locate('Codigo', edtValor.Text, [loCaseInsensitive, loPartialKey]) then
            begin
              ShowMessage('Encontrado e registro posicionado!');
            end
            else
              ShowMessage('Valor não encontrado!');
          end;
        1:
          begin
            if ClientDataSet1.Locate('Descricao', edtValor.Text, [loCaseInsensitive, loPartialKey]) then
            begin
              ShowMessage('Encontrado e registro posicionado!');
            end
            else
              ShowMessage('Valor não encontrado!');
          end;
        2:
          begin
            if ClientDataSet1.Locate('Unidade', edtValor.Text, [loCaseInsensitive, loPartialKey]) then
            begin
              ShowMessage('Encontrado e registro posicionado!');
            end
            else
              ShowMessage('Valor não encontrado!');
          end;
        3:
          begin
            if ClientDataSet1.Locate('Fornecedor', edtValor.Text, [loCaseInsensitive, loPartialKey]) then
            begin
              ShowMessage('Encontrado e registro posicionado!');
            end
            else
              ShowMessage('Valor não encontrado!');
          end;
        4:
          begin
            if ClientDataSet1.Locate('Data', edtValor.Text, [loCaseInsensitive, loPartialKey]) then
            begin
              ShowMessage('Encontrado e registro posicionado!');
            end
            else
              ShowMessage('Valor não encontrado!');
          end;
        5:
          begin
            if ClientDataSet1.Locate('Quantidade', edtValor.Text, [loCaseInsensitive, loPartialKey]) then
            begin
              ShowMessage('Encontrado e registro posicionado!');
            end
            else
              ShowMessage('Valor não encontrado!');
          end;
        6:
          begin
            if ClientDataSet1.Locate('Unitario', edtValor.Text, [loCaseInsensitive, loPartialKey]) then
            begin
              ShowMessage('Encontrado e registro posicionado!');
            end
            else
              ShowMessage('Valor não encontrado!');
          end;
        7:
          begin
            if ClientDataSet1.Locate('Total', edtValor.Text, [loCaseInsensitive, loPartialKey]) then
            begin
              ShowMessage('Encontrado e registro posicionado!');
            end
            else
              ShowMessage('Valor não encontrado!');
          end;
      end;
    2:
      case ComboBox1.ItemIndex of
        0:
          begin
            ClientDataSet1.IndexFieldNames := 'Codigo;Codigo';
            if ClientDataSet1.FindKey([1, edtValor.Text]) then

            begin
              ShowMessage('Encontrado e registro posicionado!');
            end
            else
              ShowMessage('Valor não encontrado!');

          end;
        1:
          begin
            ClientDataSet1.IndexFieldNames := 'Descricao;Descricao';
            if ClientDataSet1.FindKey([1, edtValor.Text]) then

            begin
              ShowMessage('Encontrado e registro posicionado!');
            end
            else
              ShowMessage('Valor não encontrado!');

          end;
        2:
          begin
            ClientDataSet1.IndexFieldNames := 'Unidade;Unidade';
            if ClientDataSet1.FindKey([1, edtValor.Text]) then

            begin
              ShowMessage('Encontrado e registro posicionado!');
            end
            else
              ShowMessage('Valor não encontrado!');

          end;
        3:
          begin
            ClientDataSet1.IndexFieldNames := 'Fornecedor;Fornecedor';
            if ClientDataSet1.FindKey([1, edtValor.Text]) then

            begin
              ShowMessage('Encontrado e registro posicionado!');
            end
            else
              ShowMessage('Valor não encontrado!');

          end;
        4:
          begin
            ClientDataSet1.IndexFieldNames := 'Data;Data';
            if ClientDataSet1.FindKey([1, edtValor.Text]) then

            begin
              ShowMessage('Encontrado e registro posicionado!');
            end
            else
              ShowMessage('Valor não encontrado!');

          end;
        5:
          begin
            ClientDataSet1.IndexFieldNames := 'Quantidade;Quantidade';
            if ClientDataSet1.FindKey([1, edtValor.Text]) then

            begin
              ShowMessage('Encontrado e registro posicionado!');
            end
            else
              ShowMessage('Valor não encontrado!');

          end;
        6:
          begin
            ClientDataSet1.IndexFieldNames := 'Unitario;Unitario';
            if ClientDataSet1.FindKey([1, edtValor.Text]) then

            begin
              ShowMessage('Encontrado e registro posicionado!');
            end
            else
              ShowMessage('Valor não encontrado!');

          end;
        7:
          begin
            ClientDataSet1.IndexFieldNames := 'Total;Total';
            if ClientDataSet1.FindKey([1, edtValor.Text]) then

            begin
              ShowMessage('Encontrado e registro posicionado!');
            end
            else
              ShowMessage('Valor não encontrado!');

          end;

      end;
    3:
      ClientDataSet1.EmptyDataSet;

    4:
      case ComboBox1.ItemIndex of
        0:
          begin
            vEncontrou := False;
            ClientDataSet1.DisableControls;
            try
              ClientDataSet1.First;
              while not ClientDataSet1.eof do
              begin
                if (ClientDataSet1.FieldByName('Codigo').asstring = edtValor.Text) then
                begin
                  vEncontrou := True;
                  ShowMessage('Valor Encontrado');
                  Break;
                end;
                ClientDataSet1.Next;
              end;
            finally
              ClientDataSet1.EnableControls;
            end;

          end;
        1:
          begin
            vEncontrou := False;
            ClientDataSet1.DisableControls;
            try
              ClientDataSet1.First;
              while not ClientDataSet1.eof do
              begin
                if (ClientDataSet1.FieldByName('Descricao').asstring = edtValor.Text) then
                begin
                  vEncontrou := True;
                  ShowMessage('Valor Encontrado');
                  Break;
                end;
                ClientDataSet1.Next;
              end;
            finally
              ClientDataSet1.EnableControls;
            end;

          end;
        2:
          begin
            vEncontrou := False;
            ClientDataSet1.DisableControls;
            try
              ClientDataSet1.First;
              while not ClientDataSet1.eof do
              begin
                if (ClientDataSet1.FieldByName('Unidade').asstring = edtValor.Text) then
                begin
                  vEncontrou := True;
                  ShowMessage('Valor Encontrado');
                  Break;
                end;
                ClientDataSet1.Next;
              end;
            finally
              ClientDataSet1.EnableControls;
            end;

          end;
        3:
          begin
            vEncontrou := False;
            ClientDataSet1.DisableControls;
            try
              ClientDataSet1.First;
              while not ClientDataSet1.eof do
              begin
                if (ClientDataSet1.FieldByName('Fornecedor').asstring = edtValor.Text) then
                begin
                  vEncontrou := True;
                  ShowMessage('Valor Encontrado');
                  Break;
                end;
                ClientDataSet1.Next;
              end;
            finally
              ClientDataSet1.EnableControls;
            end;

          end;
        4:
          begin
            vEncontrou := False;
            ClientDataSet1.DisableControls;
            try
              ClientDataSet1.First;
              while not ClientDataSet1.eof do
              begin
                if (ClientDataSet1.FieldByName('Data').asstring = edtValor.Text) then
                begin
                  vEncontrou := True;
                  ShowMessage('Valor Encontrado');
                  Break;
                end;
                ClientDataSet1.Next;
              end;
            finally
              ClientDataSet1.EnableControls;
            end;

          end;
        5:
          begin
            vEncontrou := False;
            ClientDataSet1.DisableControls;
            try
              ClientDataSet1.First;
              while not ClientDataSet1.eof do
              begin
                if (ClientDataSet1.FieldByName('Quantidade').asstring = edtValor.Text) then
                begin
                  vEncontrou := True;
                  ShowMessage('Valor Encontrado');
                  Break;
                end;
                ClientDataSet1.Next;
              end;
            finally
              ClientDataSet1.EnableControls;
            end;

          end;
        6:
          begin
            vEncontrou := False;
            ClientDataSet1.DisableControls;
            try
              ClientDataSet1.First;
              while not ClientDataSet1.eof do
              begin
                if (ClientDataSet1.FieldByName('Unitario').asstring = edtValor.Text) then
                begin
                  vEncontrou := True;
                  ShowMessage('Valor Encontrado');
                  Break;
                end;
                ClientDataSet1.Next;
              end;
            finally
              ClientDataSet1.EnableControls;
            end;

          end;
        7:
          begin
            vEncontrou := False;
            ClientDataSet1.DisableControls;
            try
              ClientDataSet1.First;
              while not ClientDataSet1.eof do
              begin
                if (ClientDataSet1.FieldByName('Total').asstring = edtValor.Text) then
                begin
                  vEncontrou := True;
                  ShowMessage('Valor Encontrado');
                  Break;
                end;
                ClientDataSet1.Next;
              end;
            finally
              ClientDataSet1.EnableControls;
            end;

          end;

      end;
    5:
      case ComboBox1.ItemIndex of
        0:
          begin
            ClientDataSet1.Filtered := False;
            ClientDataSet1.Filter := 'Codigo = ' + edtValor.Text;
            ClientDataSet1.Filtered := True;
          end;
        1:
          begin
            ClientDataSet1.Filtered := False;
            ClientDataSet1.Filter := 'Descricao = ' + edtValor.Text;
            ClientDataSet1.Filtered := True;
          end;
        2:
          begin
            ClientDataSet1.Filtered := False;
            ClientDataSet1.Filter := 'Unidade = ' + edtValor.Text;
            ClientDataSet1.Filtered := True;
          end;
        3:
          begin
            ClientDataSet1.Filtered := False;
            ClientDataSet1.Filter := 'Fornecedor = ' + edtValor.Text;
            ClientDataSet1.Filtered := True;
          end;
        4:
          begin
            ClientDataSet1.Filtered := False;
            ClientDataSet1.Filter := 'Data = ' + edtValor.Text;
            ClientDataSet1.Filtered := True;
          end;
        5:
          begin
            ClientDataSet1.Filtered := False;
            ClientDataSet1.Filter := 'Quantidade = ' + edtValor.Text;
            ClientDataSet1.Filtered := True;
          end;
        6:
          begin
            ClientDataSet1.Filtered := False;
            ClientDataSet1.Filter := 'Unitario = ' + edtValor.Text;
            ClientDataSet1.Filtered := True;
          end;
        7:
          begin
            ClientDataSet1.Filtered := False;
            ClientDataSet1.Filter := 'Total = ' + edtValor.Text;
            ClientDataSet1.Filtered := True;
          end;
      end;
    6:
      begin
        ClientDataSet1.Filtered := False;
      end;

  end;
end;

procedure TForm2.ClientDataSet1BeforePost(DataSet: TDataSet);
begin
  if ((ClientDataSet1.FieldByName('Codigo').IsNull) or (ClientDataSet1.FieldByName('Descricao').IsNull) or (ClientDataSet1.FieldByName('Unidade').IsNull) or (ClientDataSet1.FieldByName('Fornecedor').IsNull) or (ClientDataSet1.FieldByName('Data').IsNull) or (ClientDataSet1.FieldByName('Quantidade').IsNull) or (ClientDataSet1.FieldByName('Unitario').IsNull) or (ClientDataSet1.FieldByName('Total').IsNull)) then
  begin
    ShowMessage('Algum campo ficou vazio!');
    Abort;
  end;

end;

procedure TForm2.ClientDataSet1CalcFields(DataSet: TDataSet);
begin
  if (not ClientDataSet1.FieldByName('Quantidade').IsNull) and (not ClientDataSet1.FieldByName('Unitario').IsNull) then
  begin
    ClientDataSet1.FieldByName('Total').Value := ClientDataSet1.FieldByName('Quantidade').Value * ClientDataSet1.FieldByName('Unitario').Value;
  end;
end;

procedure TForm2.ComboBox2Change(Sender: TObject);
begin
  edtValor.Enabled := False;
  if (ComboBox2.ItemIndex = 0) or (ComboBox2.ItemIndex = 3) or (ComboBox2.ItemIndex = 6) then
    edtValor.Enabled := False
  else
    edtValor.Enabled := True;

end;

procedure TForm2.FormCreate(Sender: TObject);
const
  cDatafile = 'Dados.xml';
begin
  ClientDataSet1.FileName := ExtractFilePath(application.ExeName) + cDatafile;
  if FileExists(ClientDataSet1.FileName) then
    ClientDataSet1.Open
  else
    ClientDataSet1.CreateDataSet;
end;

end.

